#######################   AnvilStringCommand Config   #######################
##
##
##############   Placeholders and Special AnvilStringCommand tags   #########
## [close] - forces the GUI to close upon end of command list, [nothing] forces GUI to stay open
## ^^ One of these above must be used somewhere in the list of commands to be run by the button
## you are defining.
## Use %userinput% to input whatever the player has typed into the GUI text box When Executing a Command
## Use %player% to input the Player's Name When Executing a Command
## Prefix a Command with ! to run the command as the player with OP
## Prefix a Command with ~ To run the command as the console
#############################################################################
## config:
##   commands:
## Below Here is Where you Define your commands and how each slot will appear and Function
## The Result Always inherits the Lore and Displayname of the Item in Slot1, Therefore, only command
## Is possible to edit in the result slot. Also, keep this in mind when deciding what to name slot1
## And what you put in the Lore
## You can copy and paste the examples and edit them as you learn how to use the plugin
## newtown:
## ^^Creates a new command called /newtown, this is where you name the command for your anvilGUI. This is the only
## Config header you should be editing
##       slot1:  Define Slot1 here                  
##         material: NAME_TAG
##         datavalue: 0
##         displayname: "&f<&etownname&f>"
##         lore:
##         - '&7&oClick Here when done'
##         - '&7&oNaming'
##         command:
##         - 't new %userinput%' - Actually issues /t new <whatever the player types in the Anvil Text Box>
##         - '[close]'
##       slot2:  Define Slot2 here
##         material: BOOK
##         datavalue: 0
##         displayname: "&eAbout this GUI"
##         lore:
##         - "&7&oEdit the Text Box in this GUI"
##         - "&7&oand click any of the Other Two"
##         - "&7&oSlots to Name Your Town"
##         command:
##         - '[nothing]'
##       result:  Define Result slot here
##         command:
##         - 't new %userinput%'
##         - '[close]'  
config:
  commands:
    newtown:
      ##Creates a new command called /newtown
      slot1:
        material: NAME_TAG
        datavalue: 0
        displayname: "&f<&etownname&f>"
        lore:
        - '&7&oClick on the Result'
        - '&7&oSlot when done Naming'
        command:
        - '[nothing]'
      slot2:
        material: BOOK
        datavalue: 0
        displayname: "&eAbout this GUI"
        lore:
        - "&7&oEdit the Text Box in this GUI"
        - "&7&oAnd click the result Slot"
        - "&7&oTo Name Your &aTown"
        command:
        - '[nothing]'
      result:
        material: BOOK
        datavalue: 0
        displayname: "&eAbout this GUI"
        lore:
        - "&7&oEdit the Text Box in this GUI"
        - "&7&oAnd click the result Slot"
        - "&7&oTo Name Your &aTown"
        command:
        - 't new %userinput%'
        - '[close]'
    renameme:
    ## Creates a new command called /renameme
    ## This example is unique in that none of the buttons
    ## Cause the GUI to close
      slot1:
        material: PAPER
        datavalue: 0
        displayname: "&f<&eNickName&f>"
        lore:
        - '&7&oEnter your new'
        - '&7&oNickName'
        command:
        - '[nothing]'
      slot2:
        material: PAPER
        datavalue: 0
        displayname: "&f<&eNickName&f>"
        lore:
        - "&7&oClick Any of these buttons"
        - "&7&oWhen Done. Press Esc to close"
        command:
        - '[nothing]'
      result:
        material: PAPER
        datavalue: 0
        displayname: "&f<&eNickName&f>"
        lore:
        - "&7&oClick Any of these buttons"
        - "&7&oWhen Done. Press Esc to close"
        command:
        - "nick %userinput%"
        ## Executes as the player as OP
        - '[close]'